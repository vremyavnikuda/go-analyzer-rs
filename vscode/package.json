{
  "name": "go-analyzer",
  "displayName": "Go Analyzer",
  "description": "Go Analyzer - Advanced static analysis tool for Go development that provides real-time variable lifecycle tracking, data race detection, and visual code flow analysis. üîç\n\n‚ú® KEY FEATURES:\n‚Ä¢ Real-time variable lifecycle visualization with color-coded decorations\n‚Ä¢ Automatic data race detection in goroutines and concurrent code\n‚Ä¢ Interactive variable flow analysis - click on any variable to see its complete lifecycle\n‚Ä¢ Customizable color schemes for different code elements\n‚Ä¢ Automatic analysis on cursor movement with configurable delay\n‚Ä¢ Visual graph representation of code relationships\n‚Ä¢ Quick activation/deactivation with keyboard shortcuts\n\nüöÄ HOW TO USE:\n1. Open any Go file in VS Code\n2. Use Shift+Alt+S to activate or Shift+Alt+C to deactivate the analyzer\n3. Place your cursor on any variable, function, or identifier\n4. The extension automatically highlights all related code with different colors:\n   - üü¢ Green: Variable declarations\n   - üü° Yellow: Variable usage\n   - üîµ Blue: Pointer operations\n   - üî¥ Red: Potential data races (high priority)\n   - üü† Orange: Low-priority race warnings\n   - üü£ Purple: Reassigned alias variables\n   - üü™ Magenta: Captured variables in closures\n\nüéπ KEYBOARD SHORTCUTS:\n‚Ä¢ Shift+Alt+S - Activate Go Analyzer\n‚Ä¢ Shift+Alt+C - Deactivate Go Analyzer\n\nüìã COMMANDS:\n‚Ä¢ 'Go Analyzer: Show Lifecycle' - Manually trigger analysis for current cursor position\n‚Ä¢ 'Go Analyzer: Show Graph' - Display interactive visual graph of code relationships\n‚Ä¢ 'Go Analyzer: Activate Extension' - Enable the analyzer\n‚Ä¢ 'Go Analyzer: Deactivate Extension' - Disable the analyzer\n\n‚öôÔ∏è CONFIGURATION:\nCustomize colors, enable/disable auto-analysis, and adjust timing in VS Code settings under 'Go Analyzer'.\n\nüéØ PERFECT FOR:\n‚Ä¢ Debugging complex variable scopes\n‚Ä¢ Identifying potential race conditions in concurrent Go code\n‚Ä¢ Understanding data flow in large functions\n‚Ä¢ Code review and refactoring\n‚Ä¢ Learning Go concurrency patterns safely",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Debuggers",
    "Other"
  ],
  "keywords": [
    "go",
    "golang",
    "analyzer",
    "static analysis",
    "data race",
    "concurrency",
    "variable tracking",
    "goroutine",
    "code visualization",
    "debugging",
    "lifecycle",
    "pointer analysis"
  ],
  "publisher": "go-analyzer-team",
  "license": "MIT",
  "activationEvents": [
    "onLanguage:go"
  ],
  "main": "./out/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/vremyavnikuda/go-analyzer-rs.git"
  },
  "contributes": {
    "commands": [
      {
        "command": "goanalyzer.showLifecycle",
        "title": "Go Analyzer: Show Lifecycle"
      },
      {
        "command": "goanalyzer.showGraph",
        "title": "Go Analyzer: Show Graph"
      },
      {
        "command": "goanalyzer.activate",
        "title": "Go Analyzer: Activate Extension"
      },
      {
        "command": "goanalyzer.deactivate",
        "title": "Go Analyzer: Deactivate Extension"
      }
    ],
    "keybindings": [
      {
        "command": "goanalyzer.activate",
        "key": "shift+alt+s",
        "when": "editorTextFocus && editorLangId == go"
      },
      {
        "command": "goanalyzer.deactivate",
        "key": "shift+alt+c",
        "when": "editorTextFocus && editorLangId == go"
      }
    ],
    "configuration": {
      "title": "Go Analyzer",
      "properties": {
        "goAnalyzer.enableAutoAnalysis": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic variable analysis on cursor movement"
        },
        "goAnalyzer.autoAnalysisDelay": {
          "type": "number",
          "default": 300,
          "description": "Delay in milliseconds before auto-analysis triggers"
        },
        "goAnalyzer.declarationColor": {
          "type": "string",
          "default": "green",
          "description": "Color for variable declarations"
        },
        "goAnalyzer.useColor": {
          "type": "string",
          "default": "yellow",
          "description": "Color for variable uses"
        },
        "goAnalyzer.pointerColor": {
          "type": "string",
          "default": "blue",
          "description": "Color for pointer operations"
        },
        "goAnalyzer.raceColor": {
          "type": "string",
          "default": "red",
          "description": "Color for potential data race warnings"
        },
        "goAnalyzer.raceLowColor": {
          "type": "string",
          "default": "orange",
          "description": "Color for low-priority race warnings"
        },
        "goAnalyzer.aliasReassignedColor": {
          "type": "string",
          "default": "purple",
          "description": "Color for reassigned alias variables"
        },
        "goAnalyzer.aliasCapturedColor": {
          "type": "string",
          "default": "magenta",
          "description": "Color for captured alias variables in closures"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./"
  },
  "dependencies": {
    "vscode-languageclient": "^8.0.0"
  },
  "devDependencies": {
    "@types/vscode": "^1.60.0",
    "@types/node": "14.x",
    "typescript": "^4.3.2"
  }
}
